#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
在计算机系统中, 任何数据的本质都是0101的字节流。一个0/1的位置称之为 ``1位``。
例如32位的计算机系统中用32位来表示一个整数。而64位系统用64位来表示一个整数。
字符串本质上也是字节流。比如在美国键盘的ASCII编码中, 只有128个字符。所以ASCII
字符用8位来表示一个字符。下面我们给出字符串编码和解码的定义:

- 编码 (encode): 指的是将字符串按照一定规则(比如ASCII编码), 编码成字节流的过程。
- 解码 (decode): 指的是将字节流按照一定规则解码成字符串的过程。

先不要管为什么, UTF-8是世界上最通用的编码, 可以编码世界上所有国家的语言文字符号。

请注意, 在Python3中默认的编码是UTF-8编码, 而在Python2中不是。在Python2脚本中使用
非ASCII编码, 需要在文件头加上 ``# -*- coding: utf-8 -*-`` 这样的说明。而且还要
使用 ``s = u"中文"`` 这样的语法来告诉解释器, 这是一个UTF-8编码的字符串。

不过, Python2提供了一个解决方案, 只要你在脚本的首部导入了::

    from __future__ import unicode_literals
    
那么本文件中的所有字符就都是UTF-8编码的字符串了。
"""

from __future__ import unicode_literals

s = "Hello World!"
b = s.encode("utf-8")

s = "中文"
b = s.encode("utf-8")